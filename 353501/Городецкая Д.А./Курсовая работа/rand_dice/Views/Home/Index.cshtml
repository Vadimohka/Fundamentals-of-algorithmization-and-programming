@{
    int[,]? matrix = ViewBag.Matrix as int[,];
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rolling Dice</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
          integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="~/css/main.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>

<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-body-tertiary">
            <div class="container-fluid">
                <a class="navbar-brand" href="/Home/Index">Rolling Dice</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                        <li class="nav-item">
                            <a class="nav-link active" aria-current="page" href="/Home/Index">Roll</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="/History/Index">History</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <section>
        <div class="container my-5 text-center">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12">

                </div>
                <div class="col-lg-12 col-md-12 col-sm-12 text-center" class = "randomize">
                    <h2 style="text-align:center">Roll the Dice</h2>

                    <label for="diceType">Выбирите количество граней на кубике:</label>
                    <div class="d-flex justify-content-center">
                    <select class="form-select w-25 m-3" id="diceType" name="TypeOfDice">
                        <option value="4">4-sided</option>
                        <option value="6">6-sided</option>
                        <option value="8">8-sided</option>
                        <option value="10">10-sided</option>
                        <option value="12">12-sided</option>
                        <option value="20">20-sided</option>
                        <option value="100">100-sided</option>
                    </select>
                    </div>
                    <button type="button" id="rollButton" class="btn btn-light m-3 w-25">Roll Dice</button>


                    <div id="model" style="width: 100%; height: 300px;">
                        <img id="diceImage" src="" alt="Dice image" style="max-width: 100%; max-height: 100%;">
                    </div>
                    <div id="resultContainer">
                        @if (ViewBag.DiceRoll != null)
                        {
                            <h3>Result: @ViewBag.DiceRoll</h3>
                        }

                    </div>
                </div>
            </div>
            <h2>Matrix:</h2>
            <style>
                td {
                    width: 40px; /* Фиксированная ширина ячейки */
                    height: 40px; /* Фиксированная высота ячейки */
                    text-align: center; /* Выравнивание содержимого по центру */
                    border: 1px solid white; /* Граница вокруг ячейки */
                }
            </style>
            

            <div class="matrixx text-center">
                <div>
                    <h4>
                        Из базы данных мы возьмём 9 последних значений составим матрицу и посчитаем её определитель
                    </h4>
                </div>
                <div class="d-flex justify-content-center">
            <table id="matrixTable">
                @if (matrix != null)
                {
                    for (int i = 0; i < 3; i++)
                    {
                        <tr>
                            @for (int j = 0; j < 3; j++)
                            {
                                <td>@matrix[i, j]</td>
                            }
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="3">Matrix is null</td>
                    </tr>
                }
            </table>

            </div>
            </div>
            <button type="button" id="calculateDeterminantButton" class="btn btn-light my-3">Посчитать определитель</button>
            <h2 id="determinantValue">Determinant: @ViewBag.Determinant</h2>
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-info" role="alert">
                    @TempData["Message"]
                </div>
            }

            <p>Upload your file to import data:</p>
            <form asp-controller="Home" asp-action="ImportFromFile" method="post" enctype="multipart/form-data">
                <input type="file" name="file" />
                <button type="submit">Upload</button>
            </form>
            <form asp-controller="Home" asp-action="ExportToFile" method="post">
                <button type="submit">Download Data</button>
            </form>
        </div>
    </section>
    <footer>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            // Проверяем, есть ли сохраненные стили в sessionStorage
            const savedStyles = sessionStorage.getItem('pageStyles');

            // Если есть сохраненные стили, применяем их
            if (savedStyles) {
                $('head').append(`<style>${savedStyles}</style>`);
            }

            // Сохраняем текущие стили в sessionStorage
            $(window).on('beforeunload', function () {
                const currentStyles = $('style').html();
                sessionStorage.setItem('pageStyles', currentStyles);
            });

            // Отображение изображения кубика при выборе пункта из списка
            $('#diceType').on('change', function () {
                const diceType = $(this).val();
                updateDiceImage(diceType);
            });

            // Обновление изображения кубика и вывод результата броска при нажатии кнопки "Roll Dice"
            $('#rollButton').on('click', function (event) {
                event.preventDefault(); // Предотвращение стандартной отправки формы

                const diceType = $('#diceType').val();

                $.ajax({
                    type: 'POST',
                    url: '/Home/Index',
                    data: { TypeOfDice: diceType },
                    success: function (response) {
                        console.log(response); // Для отладки, вывод ответа в консоль

                        if (response.diceRoll !== undefined) {
                            $('#resultContainer').html("<h3>Result: " + response.diceRoll + "</h3>");
                        } else {
                            $('#resultContainer').html("<h3>Error: Invalid response</h3>");
                        }

                        // Обновление изображения кубика
                        updateDiceImage(diceType);
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        $('#resultContainer').html("<h3>Error: Server error</h3>");
                    }
                });
            });

            // При загрузке страницы также отобразим изображение кубика
            const initialDiceType = $('#diceType').val();
            updateDiceImage(initialDiceType);

            // Отправка формы
            // Отправка формы для расчета определителя и обновление его значения
            $('#calculateDeterminantButton').on('click', function () {
                $.ajax({
                    type: 'POST',
                    url: '/Home/AddHistoryAndCalculateDeterminant',
                    data: {}, // Если требуется отправить какие-либо данные, укажите их здесь
                    success: function (response) {
                        // Обновление значения определителя на странице
                        $('#determinantValue').text('Determinant: ' + response.determinant);
                        // Если есть матрица, обновляем ее на странице
                        if (response.matrix) {
                            const matrixTable = $('#matrixTable');
                            matrixTable.empty();
                            for (let i = 0; i < response.matrix.length; i++) {
                                let row = '<tr>';
                                for (let j = 0; j < response.matrix[i].length; j++) {
                                    row += `<td>${response.matrix[i][j]}</td>`;
                                }
                                row += '</tr>';
                                matrixTable.append(row);
                            }
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error);
                        // В случае ошибки выведите сообщение на странице
                        // Например:
                        // $('#determinantValue').text('Error calculating determinant');
                    }
                });
            });

            // Функция обновления изображения кубика
            function updateDiceImage(diceType) {
                const diceImage = document.getElementById("diceImage");
                switch (diceType) {
                    case "4":
                        diceImage.src = "/dice_png/d4.png";
                        break;
                    case "6":
                        diceImage.src = "/dice_png/d6.png";
                        break;
                    case "8":
                        diceImage.src = "/dice_png/d8.png";
                        break;
                    case "10":
                        diceImage.src = "/dice_png/d10.png";
                        break;
                    case "12":
                        diceImage.src = "/dice_png/d12.png";
                        break;
                    case "20":
                        diceImage.src = "/dice_png/d20.png";
                        break;
                    case "100":
                        diceImage.src = "/dice_png/d10.png";
                        break;
                    default:
                        diceImage.src = "";
                }
            }
        });
    </script>
</body>
</html>
